#  _  __          _     _           _
# | |/ /___ _   _| |__ (_)_ __   __| |___
# | ' // _ \ | | | '_ \| | '_ \ / _` / __|
# | . \  __/ |_| | |_) | | | | | (_| \__ \
# |_|\_\___|\__, |_.__/|_|_| |_|\__,_|___/
#           |___/

# unbind C-b
set-option -g prefix C-f
set-option -g status on
bind-key C-f send-prefix


# Rezize panes without prefix
bind -n C-M-Left resize-pane -L +2
bind -n C-M-Right resize-pane -R +2
bind -n C-M-Up resize-pane -U +2
bind -n C-M-Down resize-pane -D +2

# Switch panes Alt-arrow without prefix
bind -n C-M-h select-pane -L
bind -n C-M-l select-pane -R
bind -n C-M-k select-pane -U
bind -n C-M-j select-pane -D

# Swap windows with CMD+Left/Right
bind Left swap-window -t -1\; select-window -t -1
bind Right swap-window -t +1\; select-window -t +1

# Create a new session
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"
bind k confirm kill-session
bind K confirm kill-server

# Run command
bind W run-shell "tnav --window" # CMD+t
bind F run-shell "tnav --tmux" # CMD+k

bind R run-shell "$HOME/.dotfiles/.local/bin/start_tmux"
bind P run-shell "$HOME/.local/bin/switch_theme"
bind G display-popup -E -d '#{pane_current_path}' -h 100% -w 100% 'lazygit'
bind D display-popup -E -d '#{pane_current_path}' -h 100% -w 100% 'lazydocker'
bind C split-window -h -p 30 -c "#{pane_current_path}" "claude"

# Split panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Launch Claude Code in a split
bind - split-window -v -c '#{pane_current_path}'

# Open a new window
bind c new-window -c '#{pane_current_path}'

# Choose a new session
bind C-b run "if [ '#{status}' = 'on' ]; then tmux set-option -g status off; else tmux set-option -g status on; fi"

# Kill window/pane without confirmation
unbind &
bind & kill-window

unbind x
bind x kill-pane

unbind '"'
unbind %
unbind '"'
unbind %
